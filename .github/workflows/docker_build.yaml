name: Docker Build

on:
  pull_request:
    branches: 
      - develop
      - master

jobs:

  docker_deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Check out GitHub Repo
      if: "!contains(github.event.head_commit.message, 'skip ci')"
      uses: actions/checkout@v2

    - name: Set Version and Repo Name
      run: |
        echo ::set-env name=APP_VERSION_NUM::$(sed -n '/module-version:/{n;p;}' kbase.yml | sed 's/ //g')
        echo ::set-env name=MY_TEST_APP::$(echo ${GITHUB_REPOSITORY}/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}' | sed -e "s/:refs//")"-testing")

    - name: Verify Version and Repo Name
      env:
        REPO_NAME: $
      run: |
        echo "Version:" $APP_VERSION_NUM
        echo "App:" $MY_APP
        echo "Repo:" $GITHUB_REPOSITORY
        
    - name: Build and Push to Packages
      if: "!contains(github.event.head_commit.message, 'skip ci')"    
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ env.MY_TEST_APP }}
        tag_with_ref: true
        tag_with_sha: true
        tags: ${{ env.APP_VERSION_NUM }}, latest

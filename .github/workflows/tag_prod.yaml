name: Tag Prod Environment

on:
  pull_request:
    types: [ labeled ]

jobs:

  docker_retag:
    runs-on: ubuntu-latest
    steps:

    - name: Check out GitHub Repo
      uses: actions/checkout@v2


    - name: Set App Version and Repo Name
      run: |
        echo ::set-env name=APP_VERSION_NUM::$(sed -n '/module-version:/{n;p;}' kbase.yml | sed 's/ //g')
        echo ::set-env name=MY_APP::$(echo ${GITHUB_REPOSITORY}/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}' | sed -e "s/:refs//")"-testing")
        echo ::set-env name=MY_BRANCH::$(git branch --show-current)
        echo ::set-env name=MY_SHA::$(git rev-parse --short=7 HEAD)
        echo ::set-env name=VERSIONS::$(curl -sL -X POST https://api.github.com/graphql -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }} " -d '{"query":"query{repository(owner:\"jsfillman\",name:\"sdk_ci_demopy\"){registryPackages(first:10,registryPackageType:\"DOCKER\",name: \"sdk_ci_demopy-testing\"){nodes{versions(first:100){nodes{version}}}}}}"}' | jq .)


## Set target Docker image based on new pull request label

    - name: Set Prod Target
      if: contains( github.event.pull_request.labels.*.name, 'prod')
      run: |
        echo ::set-env name=MY_APP::$(echo ${GITHUB_REPOSITORY}/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}' | sed -e "s/:refs//"))
        echo "Set Prod"

## Confirm variables

    - name: Verify Version and Repo Name
      run: |
        echo "Version:" $APP_VERSION_NUM
        echo "App:" $MY_APP
        echo "Repo:" $GITHUB_REPOSITORY
        echo "Branch:" $MY_BRANCH
        echo "SHA:" $MY_SHA

## Tag and push to GPR
        
    - name: Tag Environment
      if: contains( github.event.pull_request.labels.*.name, 'prod') 
      run: |
        docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
        docker pull docker.pkg.github.com/jsfillman/sdk_ci_demopy/sdk_ci_demopy-testing:sha-$MY_SHA
        docker tag docker.pkg.github.com/jsfillman/sdk_ci_demopy/sdk_ci_demopy-testing:sha-$MY_SHA docker.pkg.github.com/jsfillman/sdk_ci_demopy/sdk_ci_demopy:sha-$MY_SHA
        docker tag docker.pkg.github.com/jsfillman/sdk_ci_demopy/sdk_ci_demopy:sha-$MY_SHA latest
        docker push docker.pkg.github.com/jsfillman/sdk_ci_demopy/sdk_ci_demopy:sha-$MY_SHA

# Fix latest export ISDEV=$(curl -s https://github.com/jsfillman/sdk_ci_demopy/packages/271278/versions | grep -c 8d1b591)